// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.12
// source: master_rpc.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserOperateType int32

const (
	UserOperateType_Unknown         UserOperateType = 0
	UserOperateType_CreateUser      UserOperateType = 1
	UserOperateType_DeleteUser      UserOperateType = 2
	UserOperateType_ChangePwd       UserOperateType = 3
	UserOperateType_ShowUser        UserOperateType = 4
	UserOperateType_AddToGroup      UserOperateType = 5
	UserOperateType_DeleteFromGroup UserOperateType = 6
)

// Enum value maps for UserOperateType.
var (
	UserOperateType_name = map[int32]string{
		0: "Unknown",
		1: "CreateUser",
		2: "DeleteUser",
		3: "ChangePwd",
		4: "ShowUser",
		5: "AddToGroup",
		6: "DeleteFromGroup",
	}
	UserOperateType_value = map[string]int32{
		"Unknown":         0,
		"CreateUser":      1,
		"DeleteUser":      2,
		"ChangePwd":       3,
		"ShowUser":        4,
		"AddToGroup":      5,
		"DeleteFromGroup": 6,
	}
)

func (x UserOperateType) Enum() *UserOperateType {
	p := new(UserOperateType)
	*p = x
	return p
}

func (x UserOperateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserOperateType) Descriptor() protoreflect.EnumDescriptor {
	return file_master_rpc_proto_enumTypes[0].Descriptor()
}

func (UserOperateType) Type() protoreflect.EnumType {
	return &file_master_rpc_proto_enumTypes[0]
}

func (x UserOperateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserOperateType.Descriptor instead.
func (UserOperateType) EnumDescriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{0}
}

type CreateTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName  string       `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Schema     *TableSchema `protobuf:"bytes,2,opt,name=schema,proto3,oneof" json:"schema,omitempty"`
	Delimiters [][]byte     `protobuf:"bytes,3,rep,name=delimiters,proto3" json:"delimiters,omitempty"`
}

func (x *CreateTableReq) Reset() {
	*x = CreateTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableReq) ProtoMessage() {}

func (x *CreateTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableReq.ProtoReflect.Descriptor instead.
func (*CreateTableReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTableReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *CreateTableReq) GetSchema() *TableSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

func (x *CreateTableReq) GetDelimiters() [][]byte {
	if x != nil {
		return x.Delimiters
	}
	return nil
}

type CreateTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaList *TabletMetaList `protobuf:"bytes,1,opt,name=meta_list,json=metaList,proto3,oneof" json:"meta_list,omitempty"`
}

func (x *CreateTableResp) Reset() {
	*x = CreateTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResp) ProtoMessage() {}

func (x *CreateTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResp.ProtoReflect.Descriptor instead.
func (*CreateTableResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTableResp) GetMetaList() *TabletMetaList {
	if x != nil {
		return x.MetaList
	}
	return nil
}

type DeleteTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *DeleteTableReq) Reset() {
	*x = DeleteTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableReq) ProtoMessage() {}

func (x *DeleteTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableReq.ProtoReflect.Descriptor instead.
func (*DeleteTableReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteTableReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type DeleteTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTableResp) Reset() {
	*x = DeleteTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableResp) ProtoMessage() {}

func (x *DeleteTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableResp.ProtoReflect.Descriptor instead.
func (*DeleteTableResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{3}
}

type DisableTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *DisableTableReq) Reset() {
	*x = DisableTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableTableReq) ProtoMessage() {}

func (x *DisableTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableTableReq.ProtoReflect.Descriptor instead.
func (*DisableTableReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *DisableTableReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type DisableTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableTableResp) Reset() {
	*x = DisableTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableTableResp) ProtoMessage() {}

func (x *DisableTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableTableResp.ProtoReflect.Descriptor instead.
func (*DisableTableResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{5}
}

type EnableTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *EnableTableReq) Reset() {
	*x = EnableTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableTableReq) ProtoMessage() {}

func (x *EnableTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableTableReq.ProtoReflect.Descriptor instead.
func (*EnableTableReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *EnableTableReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type EnableTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableTableResp) Reset() {
	*x = EnableTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableTableResp) ProtoMessage() {}

func (x *EnableTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableTableResp.ProtoReflect.Descriptor instead.
func (*EnableTableResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{7}
}

type UpdateTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string       `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	Schema    *TableSchema `protobuf:"bytes,2,opt,name=schema,proto3,oneof" json:"schema,omitempty"`
}

func (x *UpdateTableReq) Reset() {
	*x = UpdateTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableReq) ProtoMessage() {}

func (x *UpdateTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableReq.ProtoReflect.Descriptor instead.
func (*UpdateTableReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTableReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *UpdateTableReq) GetSchema() *TableSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type UpdateTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTableResp) Reset() {
	*x = UpdateTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTableResp) ProtoMessage() {}

func (x *UpdateTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTableResp.ProtoReflect.Descriptor instead.
func (*UpdateTableResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{9}
}

type UpdateCheckReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName string `protobuf:"bytes,1,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
}

func (x *UpdateCheckReq) Reset() {
	*x = UpdateCheckReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckReq) ProtoMessage() {}

func (x *UpdateCheckReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckReq.ProtoReflect.Descriptor instead.
func (*UpdateCheckReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateCheckReq) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

type UpdateCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Done *bool `protobuf:"varint,1,opt,name=done,proto3,oneof" json:"done,omitempty"`
}

func (x *UpdateCheckResp) Reset() {
	*x = UpdateCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckResp) ProtoMessage() {}

func (x *UpdateCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckResp.ProtoReflect.Descriptor instead.
func (*UpdateCheckResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCheckResp) GetDone() bool {
	if x != nil && x.Done != nil {
		return *x.Done
	}
	return false
}

type SearchTableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrefixTableName string  `protobuf:"bytes,1,opt,name=prefix_table_name,json=prefixTableName,proto3" json:"prefix_table_name,omitempty"`
	StartTableName  *string `protobuf:"bytes,2,opt,name=start_table_name,json=startTableName,proto3,oneof" json:"start_table_name,omitempty"`
	StartTabletKey  []byte  `protobuf:"bytes,3,opt,name=start_tablet_key,json=startTabletKey,proto3,oneof" json:"start_tablet_key,omitempty"`
	MaxNum          *uint32 `protobuf:"varint,4,opt,name=max_num,json=maxNum,proto3,oneof" json:"max_num,omitempty"`
}

func (x *SearchTableReq) Reset() {
	*x = SearchTableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTableReq) ProtoMessage() {}

func (x *SearchTableReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTableReq.ProtoReflect.Descriptor instead.
func (*SearchTableReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *SearchTableReq) GetPrefixTableName() string {
	if x != nil {
		return x.PrefixTableName
	}
	return ""
}

func (x *SearchTableReq) GetStartTableName() string {
	if x != nil && x.StartTableName != nil {
		return *x.StartTableName
	}
	return ""
}

func (x *SearchTableReq) GetStartTabletKey() []byte {
	if x != nil {
		return x.StartTabletKey
	}
	return nil
}

func (x *SearchTableReq) GetMaxNum() uint32 {
	if x != nil && x.MaxNum != nil {
		return *x.MaxNum
	}
	return 0
}

type SearchTableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaList *TabletMetaList `protobuf:"bytes,1,opt,name=meta_list,json=metaList,proto3,oneof" json:"meta_list,omitempty"`
	IsMore   *bool           `protobuf:"varint,2,opt,name=is_more,json=isMore,proto3,oneof" json:"is_more,omitempty"`
}

func (x *SearchTableResp) Reset() {
	*x = SearchTableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTableResp) ProtoMessage() {}

func (x *SearchTableResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTableResp.ProtoReflect.Descriptor instead.
func (*SearchTableResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *SearchTableResp) GetMetaList() *TabletMetaList {
	if x != nil {
		return x.MetaList
	}
	return nil
}

func (x *SearchTableResp) GetIsMore() bool {
	if x != nil && x.IsMore != nil {
		return *x.IsMore
	}
	return false
}

type ShowTablesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTableName *string `protobuf:"bytes,2,opt,name=start_table_name,json=startTableName,proto3,oneof" json:"start_table_name,omitempty"`
	StartTabletKey []byte  `protobuf:"bytes,3,opt,name=start_tablet_key,json=startTabletKey,proto3,oneof" json:"start_tablet_key,omitempty"`
	MaxTableNum    *uint32 `protobuf:"varint,4,opt,name=max_table_num,json=maxTableNum,proto3,oneof" json:"max_table_num,omitempty"`
	MaxTabletNum   *uint32 `protobuf:"varint,5,opt,name=max_tablet_num,json=maxTabletNum,proto3,oneof" json:"max_tablet_num,omitempty"`
	UserToken      []byte  `protobuf:"bytes,6,opt,name=user_token,json=userToken,proto3,oneof" json:"user_token,omitempty"`
	AllBrief       *bool   `protobuf:"varint,7,opt,name=all_brief,json=allBrief,proto3,oneof" json:"all_brief,omitempty"`
}

func (x *ShowTablesReq) Reset() {
	*x = ShowTablesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowTablesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowTablesReq) ProtoMessage() {}

func (x *ShowTablesReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowTablesReq.ProtoReflect.Descriptor instead.
func (*ShowTablesReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *ShowTablesReq) GetStartTableName() string {
	if x != nil && x.StartTableName != nil {
		return *x.StartTableName
	}
	return ""
}

func (x *ShowTablesReq) GetStartTabletKey() []byte {
	if x != nil {
		return x.StartTabletKey
	}
	return nil
}

func (x *ShowTablesReq) GetMaxTableNum() uint32 {
	if x != nil && x.MaxTableNum != nil {
		return *x.MaxTableNum
	}
	return 0
}

func (x *ShowTablesReq) GetMaxTabletNum() uint32 {
	if x != nil && x.MaxTabletNum != nil {
		return *x.MaxTabletNum
	}
	return 0
}

func (x *ShowTablesReq) GetUserToken() []byte {
	if x != nil {
		return x.UserToken
	}
	return nil
}

func (x *ShowTablesReq) GetAllBrief() bool {
	if x != nil && x.AllBrief != nil {
		return *x.AllBrief
	}
	return false
}

type ShowTablesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletMetaList *TabletMetaList `protobuf:"bytes,3,opt,name=tablet_meta_list,json=tabletMetaList,proto3,oneof" json:"tablet_meta_list,omitempty"`
	TableMetaList  *TableMetaList  `protobuf:"bytes,4,opt,name=table_meta_list,json=tableMetaList,proto3,oneof" json:"table_meta_list,omitempty"`
	IsMore         *bool           `protobuf:"varint,5,opt,name=is_more,json=isMore,proto3,oneof" json:"is_more,omitempty"`
	AllBrief       *bool           `protobuf:"varint,7,opt,name=all_brief,json=allBrief,proto3,oneof" json:"all_brief,omitempty"`
}

func (x *ShowTablesResp) Reset() {
	*x = ShowTablesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowTablesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowTablesResp) ProtoMessage() {}

func (x *ShowTablesResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowTablesResp.ProtoReflect.Descriptor instead.
func (*ShowTablesResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *ShowTablesResp) GetTabletMetaList() *TabletMetaList {
	if x != nil {
		return x.TabletMetaList
	}
	return nil
}

func (x *ShowTablesResp) GetTableMetaList() *TableMetaList {
	if x != nil {
		return x.TableMetaList
	}
	return nil
}

func (x *ShowTablesResp) GetIsMore() bool {
	if x != nil && x.IsMore != nil {
		return *x.IsMore
	}
	return false
}

func (x *ShowTablesResp) GetAllBrief() bool {
	if x != nil && x.AllBrief != nil {
		return *x.AllBrief
	}
	return false
}

type ShowTabletNodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr      *string `protobuf:"bytes,2,opt,name=addr,proto3,oneof" json:"addr,omitempty"`
	IsShowall *bool   `protobuf:"varint,3,opt,name=is_showall,json=isShowall,proto3,oneof" json:"is_showall,omitempty"` // default = true
	UserToken []byte  `protobuf:"bytes,4,opt,name=user_token,json=userToken,proto3,oneof" json:"user_token,omitempty"`
}

func (x *ShowTabletNodesReq) Reset() {
	*x = ShowTabletNodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowTabletNodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowTabletNodesReq) ProtoMessage() {}

func (x *ShowTabletNodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowTabletNodesReq.ProtoReflect.Descriptor instead.
func (*ShowTabletNodesReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *ShowTabletNodesReq) GetAddr() string {
	if x != nil && x.Addr != nil {
		return *x.Addr
	}
	return ""
}

func (x *ShowTabletNodesReq) GetIsShowall() bool {
	if x != nil && x.IsShowall != nil {
		return *x.IsShowall
	}
	return false
}

func (x *ShowTabletNodesReq) GetUserToken() []byte {
	if x != nil {
		return x.UserToken
	}
	return nil
}

type ShowTabletNodesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletnodeInfo []*TabletNodeInfo `protobuf:"bytes,3,rep,name=tabletnode_info,json=tabletnodeInfo,proto3" json:"tabletnode_info,omitempty"`
	TabletmetaList *TabletMetaList   `protobuf:"bytes,4,opt,name=tabletmeta_list,json=tabletmetaList,proto3,oneof" json:"tabletmeta_list,omitempty"`
}

func (x *ShowTabletNodesResp) Reset() {
	*x = ShowTabletNodesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowTabletNodesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowTabletNodesResp) ProtoMessage() {}

func (x *ShowTabletNodesResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowTabletNodesResp.ProtoReflect.Descriptor instead.
func (*ShowTabletNodesResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *ShowTabletNodesResp) GetTabletnodeInfo() []*TabletNodeInfo {
	if x != nil {
		return x.TabletnodeInfo
	}
	return nil
}

func (x *ShowTabletNodesResp) GetTabletmetaList() *TabletMetaList {
	if x != nil {
		return x.TabletmetaList
	}
	return nil
}

// Tablet node
type RegisterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletnodeInfo *TabletNodeInfo `protobuf:"bytes,1,opt,name=tabletnode_info,json=tabletnodeInfo,proto3" json:"tabletnode_info,omitempty"`
}

func (x *RegisterReq) Reset() {
	*x = RegisterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterReq) ProtoMessage() {}

func (x *RegisterReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterReq.ProtoReflect.Descriptor instead.
func (*RegisterReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *RegisterReq) GetTabletnodeInfo() *TabletNodeInfo {
	if x != nil {
		return x.TabletnodeInfo
	}
	return nil
}

type RegisterResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterResp) Reset() {
	*x = RegisterResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResp) ProtoMessage() {}

func (x *RegisterResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResp.ProtoReflect.Descriptor instead.
func (*RegisterResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{19}
}

type ReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabletnodeInfo *TabletNodeInfo `protobuf:"bytes,1,opt,name=tabletnode_info,json=tabletnodeInfo,proto3" json:"tabletnode_info,omitempty"`
}

func (x *ReportReq) Reset() {
	*x = ReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportReq) ProtoMessage() {}

func (x *ReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportReq.ProtoReflect.Descriptor instead.
func (*ReportReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *ReportReq) GetTabletnodeInfo() *TabletNodeInfo {
	if x != nil {
		return x.TabletnodeInfo
	}
	return nil
}

type ReportResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportResp) Reset() {
	*x = ReportResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportResp) ProtoMessage() {}

func (x *ReportResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportResp.ProtoReflect.Descriptor instead.
func (*ReportResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{21}
}

// admin
type CmdCtrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command string   `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	ArgList []string `protobuf:"bytes,3,rep,name=arg_list,json=argList,proto3" json:"arg_list,omitempty"`
}

func (x *CmdCtrlReq) Reset() {
	*x = CmdCtrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdCtrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdCtrlReq) ProtoMessage() {}

func (x *CmdCtrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdCtrlReq.ProtoReflect.Descriptor instead.
func (*CmdCtrlReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *CmdCtrlReq) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *CmdCtrlReq) GetArgList() []string {
	if x != nil {
		return x.ArgList
	}
	return nil
}

type CmdCtrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoolResult *bool   `protobuf:"varint,3,opt,name=bool_result,json=boolResult,proto3,oneof" json:"bool_result,omitempty"`
	StrResult  *string `protobuf:"bytes,4,opt,name=str_result,json=strResult,proto3,oneof" json:"str_result,omitempty"`
}

func (x *CmdCtrlResp) Reset() {
	*x = CmdCtrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CmdCtrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdCtrlResp) ProtoMessage() {}

func (x *CmdCtrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdCtrlResp.ProtoReflect.Descriptor instead.
func (*CmdCtrlResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *CmdCtrlResp) GetBoolResult() bool {
	if x != nil && x.BoolResult != nil {
		return *x.BoolResult
	}
	return false
}

func (x *CmdCtrlResp) GetStrResult() string {
	if x != nil && x.StrResult != nil {
		return *x.StrResult
	}
	return ""
}

// acl
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName  string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	GroupName []string `protobuf:"bytes,2,rep,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Token     *string  `protobuf:"bytes,3,opt,name=token,proto3,oneof" json:"token,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{24}
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetGroupName() []string {
	if x != nil {
		return x.GroupName
	}
	return nil
}

func (x *UserInfo) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

type OperateUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserToken []byte           `protobuf:"bytes,1,opt,name=user_token,json=userToken,proto3,oneof" json:"user_token,omitempty"` // token of which user call this request
	UserInfo  *UserInfo        `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3,oneof" json:"user_info,omitempty"`    // operated user
	OpType    *UserOperateType `protobuf:"varint,4,opt,name=op_type,json=opType,proto3,enum=bigtable.UserOperateType,oneof" json:"op_type,omitempty"`
}

func (x *OperateUserReq) Reset() {
	*x = OperateUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateUserReq) ProtoMessage() {}

func (x *OperateUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateUserReq.ProtoReflect.Descriptor instead.
func (*OperateUserReq) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *OperateUserReq) GetUserToken() []byte {
	if x != nil {
		return x.UserToken
	}
	return nil
}

func (x *OperateUserReq) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *OperateUserReq) GetOpType() UserOperateType {
	if x != nil && x.OpType != nil {
		return *x.OpType
	}
	return UserOperateType_Unknown
}

type OperateUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3,oneof" json:"user_info,omitempty"`
}

func (x *OperateUserResp) Reset() {
	*x = OperateUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperateUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperateUserResp) ProtoMessage() {}

func (x *OperateUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_master_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperateUserResp.ProtoReflect.Descriptor instead.
func (*OperateUserResp) Descriptor() ([]byte, []int) {
	return file_master_rpc_proto_rawDescGZIP(), []int{26}
}

func (x *OperateUserResp) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

var File_master_rpc_proto protoreflect.FileDescriptor

var file_master_rpc_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x12, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a,
	0x64, 0x65, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x72, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x5b, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69,
	0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x2f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x30, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x0e,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x11, 0x0a,
	0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x6e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x11,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x01, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x4e, 0x75,
	0x6d, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a,
	0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x06, 0x69,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x22, 0xf3, 0x02, 0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x01, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x27, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x6d,
	0x61, 0x78, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74,
	0x4e, 0x75, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x04, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x6c,
	0x6c, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52,
	0x08, 0x61, 0x6c, 0x6c, 0x42, 0x72, 0x69, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61,
	0x6c, 0x6c, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x22, 0xa2, 0x02, 0x0a, 0x0e, 0x53, 0x68, 0x6f,
	0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x10, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x01, 0x52, 0x0d, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x06, 0x69,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f,
	0x62, 0x72, 0x69, 0x65, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x08, 0x61,
	0x6c, 0x6c, 0x42, 0x72, 0x69, 0x65, 0x66, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x62, 0x72, 0x69, 0x65, 0x66, 0x22, 0x9c, 0x01,
	0x0a, 0x12, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x01, 0x52, 0x09, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x61, 0x6c, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x02, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x61, 0x6c, 0x6c, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb4, 0x01, 0x0a,
	0x13, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46, 0x0a, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x74, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x41, 0x0a, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69,
	0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4e, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x41, 0x0a, 0x0f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x69,
	0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x0c, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x41, 0x0a, 0x0a, 0x43, 0x6d, 0x64, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x72, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x72, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x76, 0x0a, 0x0b, 0x43, 0x6d, 0x64, 0x43, 0x74, 0x72,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0b, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73,
	0x74, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x09, 0x73, 0x74, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6b,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xcc, 0x01, 0x0a, 0x0e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x22,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x34, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x07, 0x6f, 0x70, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x69, 0x67, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x06, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x6f, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a, 0x0f, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x2a, 0x80, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x77, 0x64, 0x10,
	0x03, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x68, 0x6f, 0x77, 0x55, 0x73, 0x65, 0x72, 0x10, 0x04, 0x12,
	0x0e, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x05, 0x12,
	0x13, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x10, 0x06, 0x32, 0xfe, 0x06, 0x0a, 0x06, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x44, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18,
	0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x62, 0x69,
	0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x44, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x18, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x62, 0x69, 0x67, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a,
	0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x62, 0x69, 0x67,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53,
	0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x50, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x1c, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x68, 0x6f, 0x77,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x15, 0x2e,
	0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35,
	0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x13, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x43, 0x6d, 0x64, 0x43, 0x74, 0x72, 0x6c,
	0x12, 0x14, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43, 0x6d, 0x64, 0x43,
	0x74, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x43, 0x6d, 0x64, 0x43, 0x74, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18,
	0x2e, 0x62, 0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x62, 0x69, 0x67, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x2d, 0x73, 0x68, 0x61, 0x77, 0x2f, 0x62,
	0x69, 0x67, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_master_rpc_proto_rawDescOnce sync.Once
	file_master_rpc_proto_rawDescData = file_master_rpc_proto_rawDesc
)

func file_master_rpc_proto_rawDescGZIP() []byte {
	file_master_rpc_proto_rawDescOnce.Do(func() {
		file_master_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_master_rpc_proto_rawDescData)
	})
	return file_master_rpc_proto_rawDescData
}

var file_master_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_master_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_master_rpc_proto_goTypes = []interface{}{
	(UserOperateType)(0),        // 0: bigtable.UserOperateType
	(*CreateTableReq)(nil),      // 1: bigtable.CreateTableReq
	(*CreateTableResp)(nil),     // 2: bigtable.CreateTableResp
	(*DeleteTableReq)(nil),      // 3: bigtable.DeleteTableReq
	(*DeleteTableResp)(nil),     // 4: bigtable.DeleteTableResp
	(*DisableTableReq)(nil),     // 5: bigtable.DisableTableReq
	(*DisableTableResp)(nil),    // 6: bigtable.DisableTableResp
	(*EnableTableReq)(nil),      // 7: bigtable.EnableTableReq
	(*EnableTableResp)(nil),     // 8: bigtable.EnableTableResp
	(*UpdateTableReq)(nil),      // 9: bigtable.UpdateTableReq
	(*UpdateTableResp)(nil),     // 10: bigtable.UpdateTableResp
	(*UpdateCheckReq)(nil),      // 11: bigtable.UpdateCheckReq
	(*UpdateCheckResp)(nil),     // 12: bigtable.UpdateCheckResp
	(*SearchTableReq)(nil),      // 13: bigtable.SearchTableReq
	(*SearchTableResp)(nil),     // 14: bigtable.SearchTableResp
	(*ShowTablesReq)(nil),       // 15: bigtable.ShowTablesReq
	(*ShowTablesResp)(nil),      // 16: bigtable.ShowTablesResp
	(*ShowTabletNodesReq)(nil),  // 17: bigtable.ShowTabletNodesReq
	(*ShowTabletNodesResp)(nil), // 18: bigtable.ShowTabletNodesResp
	(*RegisterReq)(nil),         // 19: bigtable.RegisterReq
	(*RegisterResp)(nil),        // 20: bigtable.RegisterResp
	(*ReportReq)(nil),           // 21: bigtable.ReportReq
	(*ReportResp)(nil),          // 22: bigtable.ReportResp
	(*CmdCtrlReq)(nil),          // 23: bigtable.CmdCtrlReq
	(*CmdCtrlResp)(nil),         // 24: bigtable.CmdCtrlResp
	(*UserInfo)(nil),            // 25: bigtable.UserInfo
	(*OperateUserReq)(nil),      // 26: bigtable.OperateUserReq
	(*OperateUserResp)(nil),     // 27: bigtable.OperateUserResp
	(*TableSchema)(nil),         // 28: bigtable.TableSchema
	(*TabletMetaList)(nil),      // 29: bigtable.TabletMetaList
	(*TableMetaList)(nil),       // 30: bigtable.TableMetaList
	(*TabletNodeInfo)(nil),      // 31: bigtable.TabletNodeInfo
}
var file_master_rpc_proto_depIdxs = []int32{
	28, // 0: bigtable.CreateTableReq.schema:type_name -> bigtable.TableSchema
	29, // 1: bigtable.CreateTableResp.meta_list:type_name -> bigtable.TabletMetaList
	28, // 2: bigtable.UpdateTableReq.schema:type_name -> bigtable.TableSchema
	29, // 3: bigtable.SearchTableResp.meta_list:type_name -> bigtable.TabletMetaList
	29, // 4: bigtable.ShowTablesResp.tablet_meta_list:type_name -> bigtable.TabletMetaList
	30, // 5: bigtable.ShowTablesResp.table_meta_list:type_name -> bigtable.TableMetaList
	31, // 6: bigtable.ShowTabletNodesResp.tabletnode_info:type_name -> bigtable.TabletNodeInfo
	29, // 7: bigtable.ShowTabletNodesResp.tabletmeta_list:type_name -> bigtable.TabletMetaList
	31, // 8: bigtable.RegisterReq.tabletnode_info:type_name -> bigtable.TabletNodeInfo
	31, // 9: bigtable.ReportReq.tabletnode_info:type_name -> bigtable.TabletNodeInfo
	25, // 10: bigtable.OperateUserReq.user_info:type_name -> bigtable.UserInfo
	0,  // 11: bigtable.OperateUserReq.op_type:type_name -> bigtable.UserOperateType
	25, // 12: bigtable.OperateUserResp.user_info:type_name -> bigtable.UserInfo
	1,  // 13: bigtable.Master.CreateTable:input_type -> bigtable.CreateTableReq
	3,  // 14: bigtable.Master.DeleteTable:input_type -> bigtable.DeleteTableReq
	5,  // 15: bigtable.Master.DisableTable:input_type -> bigtable.DisableTableReq
	7,  // 16: bigtable.Master.EnableTable:input_type -> bigtable.EnableTableReq
	9,  // 17: bigtable.Master.UpdateTable:input_type -> bigtable.UpdateTableReq
	11, // 18: bigtable.Master.UpdateCheck:input_type -> bigtable.UpdateCheckReq
	13, // 19: bigtable.Master.SearchTable:input_type -> bigtable.SearchTableReq
	15, // 20: bigtable.Master.ShowTables:input_type -> bigtable.ShowTablesReq
	17, // 21: bigtable.Master.ShowTabletNodes:input_type -> bigtable.ShowTabletNodesReq
	19, // 22: bigtable.Master.Register:input_type -> bigtable.RegisterReq
	21, // 23: bigtable.Master.Report:input_type -> bigtable.ReportReq
	23, // 24: bigtable.Master.CmdCtrl:input_type -> bigtable.CmdCtrlReq
	26, // 25: bigtable.Master.OperateUser:input_type -> bigtable.OperateUserReq
	2,  // 26: bigtable.Master.CreateTable:output_type -> bigtable.CreateTableResp
	4,  // 27: bigtable.Master.DeleteTable:output_type -> bigtable.DeleteTableResp
	6,  // 28: bigtable.Master.DisableTable:output_type -> bigtable.DisableTableResp
	8,  // 29: bigtable.Master.EnableTable:output_type -> bigtable.EnableTableResp
	10, // 30: bigtable.Master.UpdateTable:output_type -> bigtable.UpdateTableResp
	12, // 31: bigtable.Master.UpdateCheck:output_type -> bigtable.UpdateCheckResp
	14, // 32: bigtable.Master.SearchTable:output_type -> bigtable.SearchTableResp
	16, // 33: bigtable.Master.ShowTables:output_type -> bigtable.ShowTablesResp
	18, // 34: bigtable.Master.ShowTabletNodes:output_type -> bigtable.ShowTabletNodesResp
	20, // 35: bigtable.Master.Register:output_type -> bigtable.RegisterResp
	22, // 36: bigtable.Master.Report:output_type -> bigtable.ReportResp
	24, // 37: bigtable.Master.CmdCtrl:output_type -> bigtable.CmdCtrlResp
	27, // 38: bigtable.Master.OperateUser:output_type -> bigtable.OperateUserResp
	26, // [26:39] is the sub-list for method output_type
	13, // [13:26] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_master_rpc_proto_init() }
func file_master_rpc_proto_init() {
	if File_master_rpc_proto != nil {
		return
	}
	file_table_schema_proto_init()
	file_table_meta_proto_init()
	file_tabletnode_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_master_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowTablesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowTablesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowTabletNodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowTabletNodesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdCtrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CmdCtrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperateUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_master_rpc_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[25].OneofWrappers = []interface{}{}
	file_master_rpc_proto_msgTypes[26].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_master_rpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_master_rpc_proto_goTypes,
		DependencyIndexes: file_master_rpc_proto_depIdxs,
		EnumInfos:         file_master_rpc_proto_enumTypes,
		MessageInfos:      file_master_rpc_proto_msgTypes,
	}.Build()
	File_master_rpc_proto = out.File
	file_master_rpc_proto_rawDesc = nil
	file_master_rpc_proto_goTypes = nil
	file_master_rpc_proto_depIdxs = nil
}
