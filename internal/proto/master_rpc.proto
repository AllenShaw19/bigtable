syntax = "proto3"; 

package bigtable;
option go_package = "github.com/allen-shaw/bigtable/internal/proto";

import "table_schema.proto";
import "table_meta.proto";

message CreateTableReq {
    string table_name = 1;
    optional TableSchema schema = 2;
    repeated bytes delimiters = 3;
}
message CreateTableResp {
    optional TabletMetaList meta_list = 1;
}

message DeleteTableReq {
    string table_name = 1;
}
message DeleteTableResp {}

message DisableTableReq {
    string table_name = 1;
}
message DisableTableResp {}

message EnableTableReq {
    string table_name = 1;
}
message EnableTableResp {}

message UpdateTableReq {
    string table_name = 1;
    optional TableSchema schema = 2;
}
message UpdateTableResp {}

message UpdateCheckReq {
    string table_name = 1;
}
message UpdateCheckResp {
    optional bool done = 1;
}

message SearchTableReq {
    string prefix_table_name = 1;
    optional string start_table_name = 2;
    optional bytes start_tablet_key = 3;
    optional uint32 max_num = 4;
}
message SearchTableResp {
    optional TabletMetaList meta_list = 1;
    optional bool is_more = 2;
}

message ShowTablesReq {
    
}
message ShowTablesResp {

}

service Master {
    rpc CreateTable(CreateTableReq) returns (CreateTableResp) {}
    rpc DeleteTable(DeleteTableReq) returns (DeleteTableResp) {}
    rpc DisableTable(DisableTableReq) returns (DisableTableResp) {} 
    rpc EnableTable(EnableTableReq) returns (EnableTableResp) {}
    rpc UpdateTable(UpdateTableReq) returns (UpdateTableResp) {}
    rpc UpdateCheck(UpdateCheckReq) returns (UpdateCheckResp) {}
    rpc SearchTable(SearchTableReq) returns (SearchTableResp) {}

    rpc ShowTables(ShowTablesReq) returns (ShowTablesResp) {}
    rpc ShowTabletNodes(ShowTabletNodesReq) returns (ShowTabletNodesResp) {}

    rpc Register(RegisterReq) returns (RegisterResp) {}
    rpc Report(ReportReq) returns (ReportResp) {}

    rpc CmdCtrl(CmdCtrlReq) returns (CmdCtrlResp) {}
    rpc OperateUser(OperateUserReq) returns (OperateUserResp) {}
}